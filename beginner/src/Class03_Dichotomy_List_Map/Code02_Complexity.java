package Class03_Dichotomy_List_Map;

/**
 * 时间复杂度：描述常数操作次数
 *
 * 冒泡排序的时间复杂度：每轮都是循环两数交换，下一轮减少一次交换，循环就是等差数列，时间复杂度是等差数列求和
 * 等差数列求和公式：1,3,5,7,9……（2n-1)。等差数列{an}的通项公式为：an=a1+(n-1)d。前n项和公式为：Sn=n*a1+n(n-1)d/2或Sn=n(a1+an)/2
 * 时间复杂度的等差d是1，a1也是1，则an=1+(n-1)*1=n
 * Sn = n*1+n(n-1)*1/2 = n+(n^2-n)/2 = n^2/2+n/2 = n(n+1)/2
 * 最高阶的是n^2，时间复杂度与低阶和系数无关
 * O(n^2)
 *
 * 二分法 O(log2N) 远比O(n)小
 * 每次都是上次的一半 N = 2^?   ? = log2N 简写成 logN，忽略以2为底
 *
 * 常数时是 O(1)
 *
 * 最差情况估计时间复杂度
 * 排序: O(1) O(logN) O(N)
 *      O(N*logN) O(N^2) O(N^3) O(N^k)   }线性时间
 *      O(2^n) O(3^n) O(K^n) O(n!)   }递归常式
 */
public class Code02_Complexity {
}
